<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		 xmlns="http://maven.apache.org/POM/4.0.0">
		 		 
	<!-- PROJECT -->
		 
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.tapescala</groupId>
    <version>1.0-SNAPSHOT</version>
    <artifactId>tapescala</artifactId>
    <packaging>war</packaging>
    <name>Tapescala - Hibrid Tapestry Scala  Web Application</name>
    <description>
    	Web Multa is hidrid web application that using tapestry web framework with scala language. This is a tiny example of integration of java api with scala api.
    </description>
    
    
    <!-- DEPENDENCIES -->
    
    <dependencies>
    
    	<!-- TAPESTRY CORE -->
    
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-core</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>
        
        <!-- TAPESTRY SPRING -->
        
  		<dependency>
    		<groupId>org.apache.tapestry</groupId>
    		<artifactId>tapestry-spring</artifactId>
    		<version>${tapestry-release-version}</version>
  		</dependency>        
        
        <!-- SPRING -->
        

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-asm</artifactId>
			<version>${spring-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-release-version}</version>
		</dependency>        
        
        <!-- 
        	A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests)
			will fail, preventing Maven from packaging the WAR. Tapestry includes a large number
			of testing facilities designed for use with TestNG (http://testng.org/), so it's recommended. 
		-->
		
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.12.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>2.5.2</version>
            <scope>test</scope>
        </dependency>

		<!-- TAPESTRY TEST -->
		
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-test</artifactId>
            <version>${tapestry-release-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- 
        	 Provided by the servlet container, but sometimes referenced   
             in the application code. 
        -->
        
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- PROGRAMMING LANGUAGE SUPPORT -->
        <!-- SCALA LANGUAGE -->
        
		<dependency>
      		<groupId>org.scala-lang</groupId>
      		<artifactId>scala-library</artifactId>
     		<version>${scala-release-version}</version>
    	</dependency>        

		<!-- ORM PROVIDERS -->
		<!-- HIBERNATE -->

	    <dependency>
	       <groupId>org.hibernate</groupId>
	       <artifactId>hibernate-core</artifactId>
	       <version>${hibernate-release-version}</version>
	    </dependency>
	    	    
	    <!-- DATABASE PROVIDERS -->
	    
	    <!-- RELATIONAL DB PROVIDERS -->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql-connector-version}</version>
			<scope>runtime</scope>
		</dependency>
		
		<!-- NEW SQL DB PROVIDERS -->

    </dependencies>
    
    <!-- BUILD -->
    
    <build>
    
	     <pluginManagement>
	      <plugins>
        	<plugin>
        		<artifactId>maven-eclipse-plugin</artifactId>
        		<version>${eclipse-plugin-release-version}</version>
        	</plugin>	      
      		<plugin>
        		<groupId>org.scala-tools</groupId>
        		<artifactId>maven-scala-plugin</artifactId>
        		<version>${scala-plugin-release-version}</version>
			</plugin>	      
	        <plugin>
	          <groupId>org.scala-tools</groupId>
	          <artifactId>maven-scala-plugin</artifactId>
	          <version>${scala-plugin-release-version}</version>
	        </plugin>  
	      </plugins>
	    </pluginManagement>   
    
        <finalName>webmulta</finalName>
        <plugins>
        
        	<plugin>
        		<artifactId>maven-eclipse-plugin</artifactId>
        		<version>${eclipse-plugin-release-version}</version>
        	</plugin>
        
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${javac-source-version}</source>
                    <target>${javac-source-version}</target>
                    <optimize>true</optimize>
                </configuration>
                <executions>
                	<execution>
                		<phase>compile</phase>
                		<goals>
                			<goal>compile</goal>
                		</goals>
                	</execution>
                </executions>
            </plugin>

      		<plugin>
        		<groupId>org.scala-tools</groupId>
        		<artifactId>maven-scala-plugin</artifactId>
        		<version>${scala-plugin-release-version}</version>
        		<executions>
        			<execution>
        				<id>scala-compile-first</id>
        				<phase>process-resources</phase>
        				<goals>
        					<goal>add-source</goal>
        					<goal>compile</goal>
        				</goals>
        			</execution>
        			<execution>
        				<id>scala-compile</id>
        				<phase>compile</phase>
        				<goals>
        					<goal>compile</goal>
        				</goals>
        			</execution>
        			<execution>
        				<id>scala-test-compile</id>
        				<phase>process-test-resources</phase>
        				<goals>
        					<goal>testCompile</goal>
        				</goals>
        			</execution>
        		</executions>
        		<configuration>
        			<scalaVersion>${scala-release-version}</scalaVersion>
        			<jvmArgs>
        				<jvmArg>${jvm-arg-xms-value}</jvmArg>
        				<jvmArg>${jvm-arg-xmx-value}</jvmArg>
        			</jvmArgs>
        			<args>
        				<!-- to support miix java/scala only -->
        			</args>
        		</configuration>
      		</plugin>        

            <!-- Run the application using "mvn jetty:run" -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>${jetty-version}</version>
                <configuration>
                    <!-- Log to the console. -->
                    <requestLog implementation="org.mortbay.jetty.NCSARequestLog">
                        <!-- This doesn't do anything for Jetty, but is a workaround for a Maven bug
                             that prevents the requestLog from being set. -->
                        <append>true</append>
                    </requestLog>
                </configuration>
            </plugin>
        </plugins>
    </build>

	<!-- REPORTING -->

    <reporting>

        <!-- 
        	Adds a report detailing the components, mixins and base classes defined by this module. 
        -->
        
        <plugins>
                        
            <plugin>
                <groupId>org.apache.tapestry</groupId>
                <artifactId>tapestry-component-report</artifactId>
                <version>${tapestry-release-version}</version>
                <configuration>
                    <rootPackage>${tapestry-root-package}</rootPackage>
                </configuration>
            </plugin>
            
      		<plugin>
        		<groupId>org.scala-tools</groupId>
        		<artifactId>maven-scala-plugin</artifactId>
        		<version>${scala-plugin-release-version}</version>
      		</plugin>        
                        
        </plugins>
        
    </reporting>

	<!-- REPOSITORIES -->
	
    <repositories>
    
        <!-- 
        	This repository is only needed when the tapestry-release-version is a snapshot release. 
        -->
        
        <repository>
        	<id>maven-repository</id>
        	<url>http://repo1.maven.org/maven2/</url>
        </repository>
        
        <repository>
            <id>apache-snapshots</id>
            <url>http://repository.apache.org/snapshots/</url>
        </repository>

		<repository>
			<id>tapestry</id>
			<url>http://tapestry.formos.com/maven-repository</url>
		</repository>
		
		<repository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository</url>
		</repository>

    	<repository>
      		<id>scala-tools.org</id>
     		<name>Scala-tools Maven2 Repository</name>
      		<url>http://scala-tools.org/repo-releases</url>
    	</repository>
        
		<repository>
		    <id>Jboss Maven2</id>
		    <url>http://repository.jboss.org/maven2</url>
		</repository>

		<repository>
			<id>Jboss Nexus</id>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
		</repository>

    	<repository>
			<name>oss.sonatype.org</name>
			<id>oss.sonatype.org</id>
			<url>http://oss.sonatype.org/content/groups/public</url>
		</repository>              

		<repository>
			<id>codehaus.snapshots</id>
			<url>http://snapshots.repository.codehaus.org</url>
		</repository>

		<repository>
			<id>codehaus-release-repo</id>
			<name>Codehaus Release Repo</name>
			<url>http://repository.codehaus.org</url>
		</repository>

		<repository>
			<id>com.springsource.repository.bundles.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/release</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
		</repository>
		
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
		</repository>
		
		<repository>
			<id>com.springsource.repository.libraries.release</id>
			<name>SpringSource Enterprise Bundle Repository - SpringSource Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/release</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
		</repository>
		
		<repository>
			<id>com.springsource.repository.libraries.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Library Releases</name>
			<url>http://repository.springsource.com/maven/libraries/external</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
				<checksumPolicy>warn</checksumPolicy>
			</releases>
		</repository>
		
		<repository>
			<id>spring-repository</id>
			<name>Spring_Repository</name>
			<url>http://www.springsource.com/repository/</url>
		</repository>
		
		<repository>
			<id>apache-repository</id>
			<name>Spring_Repository</name>
			<url>http://repository.apache.org</url>
		</repository>

		<repository>
			<id>sonatype-repository</id>
			<name>Sonatype Release</name>
			<url>http://oss.sonatype.org/content/repositories/releases </url>
		</repository>     
        
    </repositories>
    
    <!-- PLUGIN REPOSITORIES -->
    
    <pluginRepositories>

        <!-- 
        	As above, this can be commented out when access to the snapshot version
			of a Tapestry Maven plugin is not required.   
		-->
			 
        <pluginRepository>
            <id>apache-snapshots</id>
            <url>http://repository.apache.org/snapshots/</url>
        </pluginRepository>

    	<pluginRepository>
      		<id>scala-tools.org</id>
      		<name>Scala-tools Maven2 Repository</name>
      		<url>http://scala-tools.org/repo-releases</url>
    	</pluginRepository>

    </pluginRepositories>

	<!-- PROPERTIES -->

    <properties>
        <tapestry-release-version>5.2.6</tapestry-release-version>
        <tapestry-root-package>org.webmulta</tapestry-root-package>
        <scala-release-version>2.9.0</scala-release-version>
        <scala-plugin-release-version>2.15.2</scala-plugin-release-version>
        <eclipse-plugin-release-version>2.0</eclipse-plugin-release-version>
        <mysql-connector-version>5.1.17</mysql-connector-version>
        <hibernate-release-version>3.6.4.Final</hibernate-release-version>
        <spring-release-version>3.0.5.RELEASE</spring-release-version>
        <jetty-version>6.1.16</jetty-version>
        <javac-source-version>1.6</javac-source-version>
        <jvm-arg-xms-value>-Xms128m</jvm-arg-xms-value>
        <jvm-arg-xmx-value>-Xmx2048m</jvm-arg-xmx-value>
    </properties>
    
</project>
